Здесь код приложить не могу, но была реализована такая штука:

Менеджер пакетов для системы автоматизации, где каждый пакет - отдельный юнити-проект в гите (один проект для одного плагина, чтобы было их проще обновлять).
    Он был реализован т.к. unitypackage уже не подходили из-за неудобности использования, а новый встроенный менеджер пакетов юнити предполагает хранение данных НЕ в Assets, что критично для многих сторонних плагинов.
	Пакеты мерджатся в текущий проект, запоминаются все файлы которые были добавлены, и которые не принадлежат зависимостям пакета. 
	При таком подходе все данные сторонних плагинов могут храниться где им удобно, ничего не нужно менять/переписывать/дописывать. Открыл проект с плагином, обновил его, сделал какие-то настройки под себя, 
	а затем просто обновляешь уже настроенный плагин из любого проекта с менеджером пакетов.
	
Как пример, плагин гуглорекламы. Его невозможно выделить в отдельный пакет для нового юнитивского менеджера пакетов, т.к. в этом случае всё должно находиться в папке Packages, 
а внутри самого плагина статически строками пробиты пути(!!!)
Но при нашем подходе файлы плагинов могут быть раскиданы где им удобно, хоть где попало

Пример конфига пакета:
{
    "name": "Automation.Adsmanager",
    "version": "1.0.2",
    "mergefolders": [
        "Assets"
    ],
    "dependencies": [
        "Automation.Chartboost",
        "Automation.Core",
        "Automation.Ratebox"
    ],
    "files": []
}